name: spa-env-server build
on:
  push:
    paths:
      - "spa-env-server/src/**/*.js"
      - "spa-env-server/package*.json"
  workflow_dispatch:
defaults:
  run:
    working-directory: ./spa-env-server
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: "12"
      - name: Install dependencies
        run: npm ci
      - name: Unit tests w/ coverage
        run: npm run test:coverage
      - name: LINTing
        run: npm run test:lint
      - name: OpenAPI Schema
        run: npm run test:schema
  build:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - name: npm install and build
        run: |
          npm ci
          npm run build --if-present
        env:
          CI: "true"
  s2i-build:
    # if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - name: S2I Build
        env:
          NAMESPACE: f0463d-tools
          BUILD_NAME: spa-env-server-main-build
          IMAGE_NAME: spa-env-server
        uses: redhat-developer/openshift-actions@v1.1
        with:
          version: "latest"
          openshift_server_url: ${{ secrets.OpenShiftServerURL}}
          parameters: '{"apitoken": "${{ secrets.OpenShiftToken }}", "acceptUntrustedCerts": "true"}'
          cmd: |
            'version'
            'start-build ${BUILD_NAME} -n ${NAMESPACE} --follow'
            'tag -n ${NAMESPACE} ${NAMESPACE}/${IMAGE_NAME}:latest ${NAMESPACE}/${IMAGE_NAME}:dev'
