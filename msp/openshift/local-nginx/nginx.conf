worker_processes  auto;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    underscores_in_headers on;

    # ip filtering
    allow 0.0.0.0/0; deny all;

    # logging rules
    geo $loggable {
        default 1;
        172.51.0.0/16 0;
    }

    # Use a w3c standard log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main if=$loggable;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #real_ip module
    set_real_ip_from 172.51.0.0/16;
    set_real_ip_from 142.34.208.209; set_real_ip_from 142.34.63.248/29;
    real_ip_recursive on;
    real_ip_header    X-Forwarded-For;

    #throttle zones
    limit_req_zone $binary_remote_addr zone=bra1:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=bra3:10m rate=3r/s;
    limit_req_zone $binary_remote_addr zone=bra5:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=bra25:10m rate=25r/s;

    #default throttle; not inherited if set in nested level
    # limit_req_zone $binary_remote_addr zone=bra5:10m rate=100r/s;
    # limit_req zone=bra5 burst=100;
    limit_req_zone $binary_remote_addr zone=bra100:10m rate=1400r/s;
    # limit_req zone=bra100 burst=1400;

    client_max_body_size 100m;

    # HTTP Basic rules
    # auth_basic_user_file /tmp/.htpasswd;

    server {
        listen       9999;
        server_name  localhost;

        # add in most common security headers
        add_header Content-Security-Policy "default-src * data: blob: filesystem: 'unsafe-inline' 'unsafe-eval'";
        add_header Strict-Transport-Security "max-age=86400; includeSubDomains";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection 1;
        add_header X-Frame-Options DENY;


        # TODO - VERIFY BUILD PATHS

        # index  index.html index.htm; TODO - UNCOMMENT FOR TEST2

        # serve our angular app here
        location / {
            rewrite ^/msp(/.*)$ $1;
            root   /tmp/app/dist;
            index  index.html index.htm; ## TODO - RECOMMENT FOR TEST2
            try_files $uri /index.html;
            gzip            on;
            gzip_min_length 1000;
            gzip_types      *;

            # Deploy-time configurable
            #
        }

        # location ~ ^/foo/bar/(15[1-9]|1[6-9]\d|[23]\d\d|400)/ {

        # redirect server error pages to the static page /50x.html
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # no serving Dockerfile
        location = /Dockerfile {
            root   /usr/share/nginx/html;
        }

        # For status of ngnix service, OpenShift is configured to call this
        location /nginx_status {
            # Enable Nginx stats
            stub_status on;

            # Only allow access from within OpenShift
            allow 172.51.0.0/16;

            # Other request should be denied
            deny all;

            # No need to log this request, its just noise
            access_log off;
        }
    }
}

